{"version":3,"sources":["Config/firebaseConfig.js","Components/TitleContainer.js","Components/SignIn.js","Store/actions/authActions.js","Components/SignUp.js","Home.js","Home2.js","Store/actions/postActions.js","Components/PostForm.js","Components/PostSummary.js","Components/PostList.js","Feed.js","Components/GroupList.js","Components/RequestList.js","Components/GroupRequests.js","Components/MemberList.js","Components/GroupMembers.js","Groups.js","App.js","serviceWorker.js","Store/Reducers/AuthReducer.js","Store/Reducers/postReducer.js","Store/Reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TitleContainer","className","this","props","title","subtitle","React","Component","SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","type","onChange","aria-describedby","placeholder","compose","firebaseConnect","connect","auth","dispatch","console","log","creds","credentials","getState","signInWithEmailAndPassword","then","catch","err","SignUp","firstName","lastName","groupName","signUp","signUpGroup","newUser","firestore","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","initials","randomKey","Math","random","toString","slice","profile","add","groupOwner","members","requests","groupKey","Home","Home2","removeMember","group","groupID","update","FieldValue","arrayRemove","member","CipherJS","require","Post","content","cipherKey","i","groups","length","cipher","Vigenere","encrypt","createPost","class","selected","map","includes","post","getFirebase","authorID","authorFirstName","authorLastName","createdAt","Date","PostSummary","list","isMember","decipher","decrypt","PostList","posts","key","Feed","PostForm","firestoreConnect","ordered","Posts","Groups","GroupList","memberPressed","nonMemberPressed","addMemberRequest","onClick","arrayUnion","RequestList","rejectRequest","acceptRequest","reqs","request","GroupRequests","MemberList","GroupMembers","users","Users","App","exact","to","path","component","Boolean","window","location","hostname","match","initState","authReducer","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.61ca94e8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nconst config = {\r\n  apiKey: \"AIzaSyDsKmPZlzCTd5HCl4Rq87yycNtCa09wVO0\",\r\n  authDomain: \"social-cipher.firebaseapp.com\",\r\n  databaseURL: \"https://social-cipher.firebaseio.com\",\r\n  projectId: \"social-cipher\",\r\n  storageBucket: \"social-cipher.appspot.com\",\r\n  messagingSenderId: \"949068398030\",\r\n  appId: \"1:949068398030:web:d4d133958df81d2e1fff9f\",\r\n  measurementId: \"G-Y64ED5QVTC\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport default firebase;","import React from 'react'\r\n\r\n\r\nclass TitleContainer extends React.Component {\r\n    render() {\r\n        return(\r\n                <div className=\"text-left\">\r\n                     <h1 className=\"text-left  display-3\"><b>{this.props.title}</b></h1>\r\n                     <h4>{this.props.subtitle}</h4  >\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleContainer\r\n","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {signIn} from '../Store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const {authError} = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"email\">Email address</label>\r\n    <input type=\"email\" onChange={this.handleChange} className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input type=\"password\"  onChange={this.handleChange} className=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n  </div> \r\n \r\n  <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\r\n   \r\n  <div className = \"text-red\">\r\n    {authError ? <p>{authError}</p> : null}\r\n  </div>\r\n</form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  console.log('jsbasa');\r\n  return{\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(SignIn);","import firebase from 'firebase'\r\n\r\n//This function signs user in using built in firebase command\r\nexport const signIn = (credentials) => {\r\n  return ( dispatch, getState) => {\r\n    \r\n    //const firebase = getFirebase();\r\n    console.log(credentials);\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err})\r\n    })\r\n\r\n  }\r\n}\r\n//Sign out function\r\nexport const signOut = () =>{\r\n  return(dispatch,getState) => {\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type:'SIGN_OUT_SUCCESS'});\r\n    });\r\n  } \r\n}\r\n\r\n//This signs a user up and stores them in the DB\r\nexport const signUp = (newUser) => {\r\n  return (dispatch,getState, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp)=>\r\n    {\r\n      return firestore.collection('Users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0],\r\n        groupName: newUser.groupName\r\n      })\r\n    }).then(() =>{\r\n      dispatch({type: 'SIGNUP_SUCCESS'})\r\n    }).catch(err => {\r\n        dispatch({type: 'SIGNUP_FAILED',err})\r\n    })\r\n  }\r\n}\r\n//This creates a new group when a user signs up\r\nexport const signUpGroup = (newUser) =>{\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    //async call\r\n    const randomKey = Math.random().toString(36).slice(2);\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const ownerID = getState().firebase.auth.uid;\r\n    firestore.collection('Groups').add({\r\n      groupOwner: newUser.email,\r\n      members:[newUser.email],\r\n      requests:[],\r\n      groupKey: randomKey,\r\n      groupName: newUser.groupName\r\n    }).then( () => {\r\n        dispatch({type: 'CREATE_GROUP' });\r\n    }).catch((err)=>{\r\n        dispatch({type: 'CREATE_GROUP_ERROR', err });\r\n    })\r\n    \r\n}\r\n};\r\n","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {signUp, signUpGroup} from '../Store/actions/authActions'\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    groupName:''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n    this.props.signUpGroup(this.state)\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"email\">Email address</label>\r\n    <input type=\"email\" onChange={this.handleChange} className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input type=\"password\"  onChange={this.handleChange} className=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n  </div>    \r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"firstName\">First Name</label>\r\n    <input type=\"text\" onChange={this.handleChange} className=\"form-control\" id=\"firstName\" aria-describedby=\"emailHelp\" placeholder=\"Enter First Name\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"lastName\">Last Name</label>\r\n    <input type=\"text\" onChange={this.handleChange} className=\"form-control\" id=\"lastName\" aria-describedby=\"emailHelp\" placeholder=\"Enter Last Name\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"groupName\">Group Name</label>\r\n    <input type=\"text\" onChange={this.handleChange} className=\"form-control\" id=\"groupName\" aria-describedby=\"emailHelp\" placeholder=\"Enter Your Groups Name\"/>\r\n  </div>\r\n\r\n  <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n  <div className=\"text-red\">\r\n  {this.props.authError ? <p>{this.props.authError}</p>:null}\r\n  </div>\r\n</form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    auth: state.firebase.auth,  \r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUp: (newUser, firebase) => dispatch(signUp(newUser, firebase)),\r\n  signUpGroup: (newUser,firebase) => dispatch(signUpGroup(newUser,firebase))\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(SignUp);","import React, { Component } from \"react\";\r\nimport TitleContainer from './Components/TitleContainer';\r\nimport SignIn from './Components/SignIn';\r\nimport SignUp from './Components/SignUp';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"home\">\r\n        <div className = \"row justify-content-center\">\r\n          <div className = \"col-5\">\r\n        <TitleContainer\r\n          title=\"Social Cipher\"\r\n          subtitle=\"A secure social media platform that encrypts all your posts and lets group members view them.\"\r\n        ></TitleContainer>\r\n        </div>\r\n        <div className = \"col-7\">\r\n\r\n        {/* Sign in page where users sign in using a email and password */}\r\n\r\n        <SignIn></SignIn>\r\n        \r\n\r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React, { Component } from \"react\";\r\nimport TitleContainer from './Components/TitleContainer';\r\nimport SignIn from './Components/SignIn';\r\nimport SignUp from './Components/SignUp';\r\n\r\nclass Home2 extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"home\">\r\n        <div className = \"row\">\r\n          <div className = \"col-5\">\r\n        <TitleContainer\r\n          title=\"Social Cipher\"\r\n          subtitle=\"A secure social media platform that encrypts all your posts and lets group members view them.\"\r\n        ></TitleContainer>\r\n        </div>\r\n        <div className = \"col-7\">\r\n\r\n        {/* Users sign up using first name, last name, group name, email and password */}\r\n        <SignUp></SignUp>\r\n        \r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home2;","import firebase from 'firebase'\r\n\r\n//Creates a post\r\nexport const createPost = (post) => {\r\n\r\n    return (dispatch, getState, {getFirebase,getFirestore}) => {\r\n        //async call\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorID = getState().firebase.auth.uid;\r\n        firestore.collection('Posts').add({\r\n            ...post, //Spread property\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorID,\r\n            createdAt: new Date()\r\n        }).then( () => {\r\n            dispatch({type: 'CREATE_POST', post });\r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_POST_ERROR', err });\r\n        })\r\n        \r\n    }\r\n};  \r\n\r\n//This removes a member from a group \r\nexport const removeMember = (group) =>{\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      //async call\r\n      const firestore = getFirestore();\r\n      console.log(group);\r\n      \r\n      firestore.collection('Groups').doc(group.groupID).update({\r\n        members: firebase.firestore.FieldValue.arrayRemove(group.member)\r\n      }).then( () => {\r\n          dispatch({type: 'REMOVED_MEMBER' });\r\n      }).catch((err)=>{\r\n          dispatch({type: 'REMOVED_MEMBER_ERROR', err });\r\n      })\r\n      \r\n  }\r\n  };\r\n  //This rejects a request to join a group\r\n  export const rejectRequest = (group) =>{\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      //async call\r\n      const firestore = getFirestore();\r\n      console.log(group);\r\n      \r\n      firestore.collection('Groups').doc(group.groupID).update({\r\n        requests: firebase.firestore.FieldValue.arrayRemove(group.member)\r\n      }).then( () => {\r\n          dispatch({type: 'REMOVED_MEMBER' });\r\n      }).catch((err)=>{\r\n          dispatch({type: 'REMOVED_MEMBER_ERROR', err });\r\n      }) \r\n  }\r\n  };\r\n  // This requests a user to be a part of their group\r\n  export const addMemberRequest = (group) =>{\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      //async call\r\n      const firestore = getFirestore();\r\n      console.log(group);\r\n      \r\n      firestore.collection('Groups').doc(group.groupID).update({\r\n        requests: firebase.firestore.FieldValue.arrayUnion(group.member)\r\n      }).then( () => {\r\n          dispatch({type: 'REMOVED_MEMBER' });\r\n      }).catch((err)=>{\r\n          dispatch({type: 'REMOVED_MEMBER_ERROR', err });\r\n      })\r\n      \r\n  }\r\n  };\r\n//This accepts request and adds them to the group\r\n  export const acceptRequest = (group) =>{\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      //async call\r\n      const firestore = getFirestore();\r\n      console.log(group);\r\n      \r\n      firestore.collection('Groups').doc(group.groupID).update({\r\n        members: firebase.firestore.FieldValue.arrayUnion(group.member)\r\n      }).then( () => {\r\n          dispatch({type: 'REMOVED_MEMBER' });\r\n      }).catch((err)=>{\r\n          dispatch({type: 'REMOVED_MEMBER_ERROR', err });\r\n      })\r\n      \r\n  }\r\n  };","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {createPost} from '../Store/actions/postActions'\r\n\r\n\r\nconst CipherJS = require('cipherjs');\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n  handleChange = (e) => {\r\n    \r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n    \r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n      var cipherKey;\r\n      for(var i =0; i<this.props.groups.length;i++){\r\n        if(this.state.group == this.props.groups[i].groupName)\r\n        {cipherKey = this.props.groups[i].groupKey}\r\n      }\r\n      const cipher = CipherJS.Vigenere.encrypt(this.state.content, cipherKey)\r\n      \r\n      this.setState({\r\n        content: cipher\r\n      },() => {\r\n        this.props.createPost(this.state)\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"title\">Post Title</label>\r\n    <input type=\"text\" onChange={this.handleChange} className=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter Title\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"content\">Post Content</label>\r\n    <input type=\"text\"  onChange={this.handleChange} className=\"form-control\" id=\"content\" placeholder=\"Write post...\"/>\r\n  </div>\r\n  \r\n\r\n  <div class=\"form-group\">\r\n  <label htmlFor=\"group\">Group</label>\r\n      <select onChange={this.handleChange} id=\"group\" class=\"form-control\">\r\n            <option selected>Choose Group</option>\r\n            \r\n            { this.props.groups && this.props.groups.map(group =>{ return(\r\n            \r\n            group.members && group.members.includes(this.props.email) ? <option>{group.groupName}</option>: null\r\n            \r\n            )})}\r\n            </select>\r\n      \r\n    </div> \r\n    \r\n  <button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n</form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    createPost: (post) => dispatch(createPost(post))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Post)","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {removeMember} from '../Store/actions/postActions'\r\n\r\n\r\nimport firebase from 'firebase'\r\nconst CipherJS = require('cipherjs');\r\n\r\n\r\nclass PostSummary extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n  removeMember = (e) => {\r\n    console.log('hey');\r\n    //this.props.removeMember(this.state)\r\n    \r\n    this.setState(\r\n      {\r\n        \r\n      groupID: this.props.list.id,\r\n      member: e.target.id\r\n\r\n      },\r\n      () => {\r\n        this.props.removeMember(this.state)\r\n      });\r\n      \r\n  }\r\n  \r\n  render() {\r\n    console.log(this.props)\r\n      var isMember = false;\r\n      var cipherKey='k';\r\n      const email = this.props.email\r\n      console.log('email',email)\r\n\r\n      for(var i =0;i<this.props.groups.length;i++){\r\n         if(this.props.post.group == this.props.groups[i].groupName && this.props.groups[i].members.includes(email)){\r\n            isMember=true;\r\n            cipherKey=this.props.groups[i].groupKey;\r\n         }\r\n      }\r\n\r\n      const decipher = CipherJS.Vigenere.decrypt(this.props.post.content,cipherKey);\r\n\r\nconsole.log(this.props);\r\n    return(\r\n      <div className=\"card\">\r\n      <div class=\"card-body\">\r\n      <h4 class=\"card-subtitle mb-2 text-muted\">{this.props.post.group}</h4>\r\n        <h5 class=\"card-title\">{this.props.post.title}</h5>\r\n        <h6 class=\"card-subtitle mb-2 text-muted\">{this.props.post.authorFirstName}</h6>\r\n    {isMember ? <p class=\"card-text\">{decipher}</p> : <p class=\"card-text\">{this.props.post.content}</p>}\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    removeMember: (group) => dispatch(removeMember(group))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PostSummary)","import React from 'react'\r\nimport PostSummary from './PostSummary'\r\nimport '../style.css'\r\n\r\nconst PostList = ({posts,groups,email}) => {\r\n    console.log(groups)\r\n    return(\r\n        <div class=\"ting\">\r\n            { groups && posts && posts.map(post =>{ return(\r\n                <PostSummary groups= {groups} post={post} email = {email} key={post.id}></PostSummary>\r\n            )})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, { Component } from \"react\";\r\nimport PostForm from './Components/PostForm'\r\nimport PostList from './Components/PostList'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport './style.css'\r\n \r\nclass Feed extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div>\r\n        <div className = \"row\">\r\n        <div className =\"col-5\">\r\n        <h2>Feed Page</h2>\r\n        {/* The form to submit a new post - on submit it adds the post to the feed and DB */}\r\n        <PostForm groups={this.props.groups} email={this.props.email}></PostForm>\r\n        </div>\r\n        <div className =\"col-7\">\r\n          <div className = \"containsPostList\">\r\n            {/* Lists all the posts in the DB, will appear as cipher text if user is not a member of the group */}\r\n        <PostList groups={this.props.groups} posts={this.props.posts} email={this.props.email}></PostList>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  console.log(state);\r\n  return{\r\n    posts: state.firestore.ordered.Posts,\r\n    groups: state.firestore.ordered.Groups,\r\n    email: state.firebase.auth.email\r\n  }\r\n} \r\nexport default compose(firestoreConnect(['Posts','Groups']),connect(mapStateToProps))(Feed)","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {removeMember, addMember, addMemberRequest} from '../Store/actions/postActions'\r\n\r\n\r\n\r\nclass GroupList extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n  memberPressed = (e) => {\r\n    console.log(this.state);\r\n    //this.props.removeMember(this.state)\r\n    this.setState(\r\n      {\r\n      groupID:e.target.id,\r\n      member: this.props.email\r\n      },\r\n      () => {\r\n        this.props.removeMember(this.state)\r\n      });\r\n  }\r\n  \r\n  nonMemberPressed = (e) => {\r\n    this.setState(\r\n      {\r\n      groupID:e.target.id,\r\n      member: this.props.email\r\n      },\r\n      () => {\r\n        this.props.addMemberRequest(this.state)\r\n      });\r\n  \r\n  }\r\n  \r\n  render() {\r\n    return(\r\n    <div>\r\n            { this.props.groups && this.props.groups.map(group =>{ return(\r\n               <div className = \"row groupList\">\r\n                 <div className = \"col-7\">\r\n                  <h5 class=\"card-title\">{group.groupName}</h5>\r\n                  </div>\r\n                  <div className = \"col-5\">\r\n                  {group.members && group.members.includes(this.props.email) ? <a id ={group.id} onClick={this.memberPressed}>Member</a> : group.requests && group.requests.includes(this.props.email) ? <a id ={group.id} onClick={this.nonMemberPressed}>Requested</a>:<a id ={group.id} onClick={this.nonMemberPressed}>Not Member</a>}\r\n                  </div>\r\n                </div>\r\n                \r\n            )})}\r\n        </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    removeMember: (group) => dispatch(removeMember(group)),\r\n    addMemberRequest: (group) => dispatch(addMemberRequest(group))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(GroupList)","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {acceptRequest, rejectRequest, addMemberRequest} from '../Store/actions/postActions'\r\n\r\n\r\n\r\n\r\nclass RequestList extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n  rejectRequest = (e) => {\r\n    console.log('hey');\r\n    //this.props.removeMember(this.state)\r\n    \r\n    this.setState(\r\n      {\r\n        \r\n      groupID:this.props.list.id,\r\n      member: e.target.id\r\n\r\n      },\r\n      () => {\r\n        this.props.rejectRequest(this.state)\r\n      });\r\n      \r\n  }\r\n  \r\n  acceptRequest = (e) => {\r\n    this.setState(\r\n      {\r\n        groupID:this.props.list.id,\r\n        member: e.target.id\r\n      },\r\n      () => {\r\n        this.props.acceptRequest(this.state)\r\n        this.props.rejectRequest(this.state)\r\n      });\r\n  \r\n  }\r\n  \r\n  render() {\r\n      const reqs = this.props.list.requests;\r\nconsole.log(this.props);\r\n    return(\r\n        <div class=\"requestList\">\r\n        \r\n            { reqs.map(request =>{ return(\r\n                \r\n               <div className = \"row reqList\">\r\n\r\n                <div className =\"col-5\">\r\n                <h4>{request}</h4>\r\n                </div>\r\n                <div className =\"col-1 text-green\">\r\n                <a id ={request} onClick={this.acceptRequest}> Accept</a>\r\n                </div>\r\n                <div className =\"col-1 text-red\">\r\n                <a id ={request} onClick={this.rejectRequest}> Reject</a>\r\n                </div>\r\n                </div>\r\n                \r\n            )})}\r\n        </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    acceptRequest: (group) => dispatch(acceptRequest(group)),\r\n    rejectRequest: (group) => dispatch(rejectRequest(group))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RequestList)","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {removeMember, addMember, addMemberRequest} from '../Store/actions/postActions'\r\n\r\nimport RequestList from './RequestList'\r\n\r\n\r\n\r\nclass GroupRequests extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n \r\n  render() {\r\n    return(\r\n    <div class=\"groupReqs\">\r\n        <h2>Group Requests</h2> <br></br>\r\n            { this.props.groups && this.props.groups.map(group =>{ return(\r\n                \r\n               <div>\r\n                 {group.requests && group.groupOwner == this.props.email ? <RequestList list={group}></RequestList> : null}\r\n              </div>\r\n                \r\n            )})}\r\n            <br></br>\r\n        </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nexport default GroupRequests","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport {connect} from 'react-redux'\r\nimport {removeMember} from '../Store/actions/postActions'\r\n\r\n\r\n\r\n\r\nclass MemberList extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n  removeMember = (e) => {\r\n    console.log('hey');\r\n    //this.props.removeMember(this.state)\r\n    \r\n    this.setState(\r\n      {\r\n        \r\n      groupID: this.props.list.id,\r\n      member: e.target.id\r\n\r\n      },\r\n      () => {\r\n        this.props.removeMember(this.state)\r\n      });\r\n      \r\n  }\r\n  \r\n  render() {\r\n      const reqs = this.props.list.members;\r\nconsole.log(this.props);\r\n    return(\r\n        <div>\r\n        \r\n            { reqs.map(member =>{ return(\r\n                \r\n               <div className = \"row groupList\">\r\n                  <div className =\"col-5\">\r\n                <h4>{member}</h4>\r\n                </div>\r\n                <div className =\"col-1\">\r\n                {member != this.props.list.groupOwner ? <a className=\"text-red\" id ={member} onClick={this.removeMember}> Remove</a> : <p>Owner</p>}\r\n                </div>\r\n                </div>\r\n                \r\n            )})}\r\n        </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    removeMember: (group) => dispatch(removeMember(group))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MemberList)","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../style.css'\r\nimport MemberList from './MemberList'\r\n\r\n\r\nclass GroupRequests extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    group:''\r\n  }\r\n\r\n \r\n  render() {\r\n    return(\r\n    <div>\r\n  <h2>Group Members</h2>\r\n  <br></br>\r\n            { this.props.groups && this.props.groups.map(group =>{ return(\r\n                \r\n               <div>\r\n                 {group.members && group.groupOwner == this.props.email ? <MemberList list={group}></MemberList> : null}\r\n              </div>\r\n                \r\n            )})}\r\n            <br></br>\r\n        </div>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nexport default GroupRequests","import React, { Component } from \"react\";\r\nimport PostForm from './Components/PostForm'\r\nimport PostList from './Components/PostList'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport './style.css'\r\nimport GroupList from './Components/GroupList'\r\nimport GroupRequests from \"./Components/GroupRequests\";\r\nimport GroupMembers from './Components/GroupMembers';\r\n\r\n \r\nclass Groups extends Component {\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      <div className=\"groupPage\">\r\n        <div className = \"row\">\r\n        <div className =\"col-4\">\r\n        <div className = \"allGroupsContainer\">\r\n        <h2>All Groups</h2>\r\n        {/* A list of all groups in the database and wether the logged in user is a member of that group or not */}\r\n        <GroupList groups= {this.props.groups} email={this.props.email}></GroupList>\r\n        </div>\r\n        {/* <h2>All Users</h2>\r\n        <UserList groups= {this.props.groups}  users={this.props.users} email={this.props.email}></UserList> */}\r\n        </div>\r\n        <div className =\"col-8 req\">\r\n        <div className = \"reqContainer\">\r\n          <br></br>\r\n          {/* A list of all requests from other users wanting to join the logged in users group */}\r\n        <GroupRequests groups ={this.props.groups} email={this.props.email}></GroupRequests>\r\n        </div>\r\n        <div className = \"reqContainer\">\r\n        <br></br>\r\n        {/* A list of all members of the logged in users group - they can remove people from here */}\r\n        <GroupMembers groups ={this.props.groups} email={this.props.email}></GroupMembers>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  console.log(state);\r\n  return{\r\n    posts: state.firestore.ordered.Posts,\r\n    groups: state.firestore.ordered.Groups,\r\n    users: state.firestore.ordered.Users,\r\n    email: state.firebase.auth.email\r\n  }\r\n} \r\nexport default compose(firestoreConnect(['Posts','Groups','Users']),connect(mapStateToProps))(Groups)","import React, { Component } from \"react\";\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from \"./Home\";\nimport Home2 from \"./Home2\";\nimport Feed from \"./Feed\";\nimport Groups from \"./Groups\";\nimport {connect} from 'react-redux'\n\n \nclass App extends Component {\n  render() {\n    \n    return (\n       <HashRouter>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <ul className=\"header navbar-nav mr-auto\">\n            <li className=\"nav-item\"><NavLink className=\"nav-link\" exact to=\"/\">Sign In</NavLink></li>\n            <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/signUp\">Sign Up</NavLink></li>\n            <li className=\"nav-item\"><NavLink  className=\"nav-link\" to=\"/feed\">Feed</NavLink></li>\n            <li className=\"nav-item\"><NavLink  className=\"nav-link\" to=\"/groups\">Groups</NavLink></li>\n            \n          </ul>\n          <h3>{this.props.email}</h3>\n\t\t  </nav>\n          <div className=\"content\">\n             <Route exact path=\"/\" component={Home}/>\n             <Route path=\"/signUp\" component={Home2}/>\n            <Route path=\"/feed\" component={Feed}/>\n            <Route path=\"/groups\" component={Groups}/>\n          </div>\n\t\t  \n        </div>\n      </HashRouter>\n    );\n  }\n}\n \n const mapStateToProps = (state) => {\n   console.log(state);\n   return{\n      email: state.firebase.auth.email\n   }\n }\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"ERRROOR\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGN_OUT_SUCCESS':\r\n            console.log('Sined Out');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('sign up success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n\r\n        case 'SIGNUP_FAILED':\r\n            console.log('sign up error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n            case 'CREATE_GROUP_ERROR':\r\n                    console.log('Group up error');\r\n                    return{\r\n                        ...state,\r\n                        authError: action.err.message\r\n                    }\r\n                    case 'CREATE_GROUP':\r\n                            console.log('Group up created group');\r\n                            return{\r\n                                ...state,\r\n                                authError: null\r\n                            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    \r\n\r\n}\r\n\r\nconst postReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'CREATE_POST':\r\n        console.log('created project', action.post)\r\n        return state;\r\n        case 'CREATE_POST_ERROR':\r\n        console.log('created project error', action.err)\r\n        return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default postReducer","import authReducer from './AuthReducer';\r\nimport { combineReducers } from 'redux';\r\nimport postReducer from './postReducer';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer, FirebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n auth: authReducer,\r\n post: postReducer,\r\n firestore: firestoreReducer,\r\n firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from './Config/firebaseConfig';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './Store/Reducers/rootReducer';\n\n// We enhance compose in order to use Redux DevTools extension\n// https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: 'Users',\n  attachAuthIsReady: true,\n};\n\nconst store = createStore(rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n  ));\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nconsole.log('store', store);\nconsole.log('state', store.getState());\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}